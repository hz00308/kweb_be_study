Q1. 다음 코드에서 어떤 상황일 때 이 미들웨어가 실행되나요?
요청 처리 중에 에러가 발생하고 next(err)가 호출되었을 때, 일반적인 미들웨어를 지나치고 실행된다.

Q2. 이 함수가 실행되기 위한 조건은 무엇인가요?
app.js 파일의 app.use(errorHandler); 처럼 미들웨어를 등록해야 하고, next(err)가 호출되어야 한다.

Q3.  위와 같은 ‘next(err)‘ (errorHandler)호출의 장점은 무엇인가요? 교재에서 답을 찾아 ’똑같이’ 적어주세요. 
다른 미들웨어에서 발생한 에러를 즉시 처리하지 않아도 되고, 200 OK가 아닌 다른 상태에 해당하는 응답을 보낼 때 고의로 원하는 상태에 해당하는 에러를 발생시킬 수도 있어 코드의 가독성을 향상시킨다.

Q4.  이러한 코드는 코드 유지보수 측면에서 어떤 이점을 줄까요?
에러 처리를 일괄적으로 모아서 할 수 있기 때문에 유지보수가 용이하다. 
일관된 형식으로 에러를 관리할 수 있고 새로운 에러가 생겨도 errorHandler 함수에 추가하면 된다.

Q5.  400, 401, 404, 500은 각각 어떤 에러인가요? 어떤 상황에서 사용하면 좋을지 그 시나리오를 각각 제시해보세요.
400: BAD REQUEST (요청한 데이터의 형태가 잘못되어, 요청을 수행할 수 없는 경우 --예: 회원가입 시 필수 입력값 누락)
401: UNAUTHORIZED (인증이 실패하였거나 이루어지지 않아, 요청을 수행할 수 없는 경우 --예: 로그인되지 않은 상황에서 특정 페이지 접근 시도)
404: NOT FOUND (요청한 리소스가 서버에 존재하지 않는 경우 --예: 존재하지 않는 페이지에 접근 시도)
500: Internal Server Error (서버 내부의 문제로 요청을 수행할 수 없는 경우 --예: 기타 예외적인 에러 상황)

---

Q1.  Movdel, View, Controller는 각각 어떤 역할을 하나요? 교재에서 답을 찾아 ’똑같이’ 적은 후 본인만의 용어로 MVC 패턴에 대해 정리해주세요.
<교재>
Model에 해당하는 DAO에서는 오로지 특정 조건을 만족하는 데이터를 DB에서 가져오거나 데이터를 조작하는 역할을 하고,
view에 해당하는 pug 템플릿은 오로지 사용자에게 보여지는 영역, 즉 front-end 역할만 한다.
그리고 controller는 model을 적절히 활용하여 HTTP 요청을 처리하고, 그 결과를 view를 통해 클라이언트에 전달한다.
<정리>
Model은 데이터를 다루는 부분, View는 출력을 담당하는 부분, Controller는 Model과 View를 잇는 부분이다.

Q2.  해당 패턴을 사용하는 장점은 무엇일까요?
MVC 패턴의 장점은 각 코드의 역할을 명확히 구분하여 생산성과 재사용성을 높이고, 유지보수를 용이하게 해준다는 점이다.

---

Q1.  articles 테이블에서 last updated 컬럼의 특수한 설정은 무엇이며, 어떤 경우에 값이 변경될까요?
last_updated 컬럼은 "DEFAULT current_timestamp()"에 의해 row의 생성 시각이 초기값으로 설정된다.
그리고 "ON UPDATE current_timestamp()"에 의해 row가 수정될 때 현재 시각으로 값이 변경된다.

Q2.  DAO는 어떤 줄임말이었을까요? 교재에 나와있었답니다! 그 설명을 교재와 ’똑같이’ 써주세요.
DAO는 Data Access Object의 약자로, DB를 통해 데이터를 조회하거나 조작하는 작업을 전담하는 객체이다.

Q3.  ON  DELETE  CASCADE 제약조건이 갖는 의미를 설명해주세요! DB 설계할 때 잘 생각하여 넣어줘야 했었죠?
row가 삭제되었을 때 이를 참조하는 row를 단계적으로 모두 삭제한다는 의미이다. 

Q4.  getList(start,  count) 함수에서 사용되는 SQL 쿼리는 어떤 조건을 만족해야 할까요?
이 함수에서 각 게시물 객체의 날짜는 문자열화되어 반환되어야 하므로 주어진 replaceDate 함수를 사용해야 한다.
그런데 replaceDate 함수가 createdAt, lastUpdated를 사용하고 있으므로 이 함수의 SQL 쿼리에서는 AS를 사용해
articles.created_at AS createdAt, articles.last_updated AS lastUpdated 처럼 alias를 지정해줘야 한다.

---

Q1. 요청 경로 /auth/sign up을 보면 결국 HTTP POST 요청을 처리하는 컨트롤러 구현을 하셨을 겁니다! 
교재 111페이지의 signUp 부분을 참고해주세요. 컨트롤러에서 검증해야 할 목록이 세세히 적힌 것을 볼 수 있습니다. 
자, 그럼 이제 문제! 다음 중 검증해야 할 목록으로 옳지 않은 것은?
1) username이 비어 있는지 여부
2) password의 길이가 151자를 초과했는지 여부
3)  사용자 nickname(displayName)이 중복인지 여부
4)  비밀번호가 이메일 형식인지 여부
답: 4번

Q2.  정규표현식 :articleId(\d+)의 의미를 설명해봅시다. (힌트: 라우팅에서 :변수명(정규표현 식)은 어떤 역할을 할까요?)
:articleId는 라우팅에서 경로의 일부를 articleId라는 변수로 받는다는 뜻이고, 
(\d+)는 그 값이 하나 이상의 숫자로 이루어져야 한다는 뜻이다.